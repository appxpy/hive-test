basePath: /v1
definitions:
  entity.Asset:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      user_id:
        type: integer
    type: object
  v1.loginResponse:
    properties:
      token:
        type: string
    type: object
  v1.response:
    properties:
      error:
        example: message
        type: string
    type: object
  v1.userCredentials:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: Тестовое задание для вступления в проект
  title: Hive-Test
  version: "1.0"
paths:
  /assets:
    get:
      description: Retrieves all assets owned by the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Asset'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - BearerAuth: []
      summary: Get User Assets
      tags:
      - assets
    post:
      consumes:
      - application/json
      description: Adds a new asset for the user
      parameters:
      - description: Asset Data
        in: body
        name: asset
        required: true
        schema:
          $ref: '#/definitions/entity.Asset'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - BearerAuth: []
      summary: Add Asset
      tags:
      - assets
  /assets/{id}:
    delete:
      description: Removes an asset owned by the user
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - BearerAuth: []
      summary: Remove Asset
      tags:
      - assets
  /assets/purchase/{id}:
    post:
      description: Allows a user to purchase an asset
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - BearerAuth: []
      summary: Purchase Asset
      tags:
      - assets
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/v1.userCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/v1.userCredentials'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
